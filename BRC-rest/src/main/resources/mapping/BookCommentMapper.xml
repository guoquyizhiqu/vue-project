<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.liu.dao.BookCommentMapper" >
  <resultMap id="BaseResultMap" type="com.liu.model.BookComment" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="book_info_id" property="bookInfoId" jdbcType="VARCHAR" />
    <result column="reader_id" property="readerId" jdbcType="VARCHAR" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_info_id, reader_id, content, create_time, update_time
  </sql>
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from book_comment
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteById" parameterType="java.lang.String" >
    delete from book_comment
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.liu.model.BookComment" >
    insert into book_comment (id, book_info_id, reader_id, 
      content, create_time, update_time
      )
    values (#{id,jdbcType=VARCHAR}, #{bookInfoId,jdbcType=VARCHAR}, #{readerId,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="save" parameterType="com.liu.model.BookComment" >
    insert into book_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
        id,
      <if test="bookInfoId != null" >
        book_info_id,
      </if>
      <if test="readerId != null" >
        reader_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      UUID(),
      <if test="bookInfoId != null" >
        #{bookInfoId,jdbcType=VARCHAR},
      </if>
      <if test="readerId != null" >
        #{readerId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="edit" parameterType="com.liu.model.BookComment" >
    update book_comment
    <set >
      <if test="bookInfoId != null" >
        book_info_id = #{bookInfoId,jdbcType=VARCHAR},
      </if>
      <if test="readerId != null" >
        reader_id = #{readerId,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.liu.model.BookComment" >
    update book_comment
    set book_info_id = #{bookInfoId,jdbcType=VARCHAR},
      reader_id = #{readerId,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectAll" resultMap="BaseResultMap">
    select
    * from book_comment bc
    <include refid="dynamic_conditions" />
  </select>
  <sql id="dynamic_conditions">
    <where>
      <if test="status!=null and status!=''">
        and bur.status = #{status}
      </if>
    </where>
  </sql>
</mapper>